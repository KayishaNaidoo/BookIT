<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>